<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.imgonna.notify.model.mapper.NotifyMapper">

	<resultMap type="notify" id="notify">
		<result column="notify_no" property="notifyNo"></result>
		<result column="table_name" property="tableName"></result>
		<result column="pk_no" property="pkNo"></result>
		<result column="content" property="content"></result>
		<result column="send" property="send"></result>
		<result column="receive" property="receive"></result>
		<result column="is_read" property="isRead"></result>
		<result column="created_time" property="createdTime"></result>
	</resultMap>
	<select id="getNotifyCount" parameterType="map">
		select count(*) from notify
		where receive=#{id} and is_read = 0
		order by created_time desc;
	</select>
	
	<select id="getNotifyList" parameterType="map" resultMap="notify">
		select notify_no, table_name, pk_no, content, send, receive, is_read, created_time
		from notify
		where receive=#{id} and is_read = 0
		order by created_time desc;
	</select>
	
	<select id="getNotifyListAll" parameterType="map" resultMap="notify">
		select notify_no, table_name, pk_no, content, send, receive, is_read, created_time
		from notify
		where receive=#{id}
		order by created_time desc;
	</select>
	
    <insert id="createNotify" parameterType="notify">
        insert into notify (table_name, pk_no, content, send, receive)
        values (#{tableName}, #{pkNo}, #{content}, #{send}, #{receive})
        <selectKey resultType="int" keyProperty="notifyNo" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="updateNotify" parameterType="int">
       update notify
       set is_read = 1
       where notify_no = #{notifyNo}
    </update>

    <update id="updateNotifyAll" parameterType="String">
		update notify
		set is_read = 1
		where notify_no between (
		    select min_notify_no from (
		        select min(notify_no) AS min_notify_no from notify
		    ) AS temp
		) and (
		    select max_notify_no FROM (
		        select max(notify_no) AS max_notify_no from notify
		    ) AS temp
		)
		and receive = #{id};
    </update>
    
	<delete id="deleteNotifyList" parameterType="list">
	  delete from notify
	  where notify_no in
	  <foreach collection="list" item="list" open="(" separator="," close=")">
	    #{list}
	  </foreach>
	</delete>

</mapper>