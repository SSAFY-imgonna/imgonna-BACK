<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.trip.member.model.mapper.MemberMapper">

    <resultMap type="member" id="member" >
        <result column="id" property="id"></result>
        <result column="email" property="email"></result>
        <result column="name" property="name"></result>
        <result column="password" property="password"></result>
        <result column="phone" property="phone"></result>
        <result column="nickname" property="nickname"></result>
        <result column="mbti" property="mbti"></result>
        <result column="introduction" property="introduction"></result>
        <result column="join_date" property="joinDate"></result>
        <result column="type_no" property="type" typeHandler="com.ssafy.trip.enums.handlers.MemberTypeEnumHandler"></result>
        <result column="salt" property="salt"></result>
        <result column="photo" property="photo"></result>
        <result column="token" property="token"></result>
    </resultMap>

    <resultMap type="memberDetailsDto" id="memberDetails" >
        <result column="id" property="id"></result>
        <result column="email" property="email"></result>
        <result column="name" property="name"></result>
        <result column="phone" property="phone"></result>
        <result column="nickname" property="nickname"></result>
        <result column="mbti" property="mbti"></result>
        <result column="introduction" property="introduction"></result>
        <result column="join_date" property="joinDate"></result>
        <result column="type_no" property="type" typeHandler="com.ssafy.trip.enums.handlers.MemberTypeEnumHandler"></result>
        <result column="photo" property="photo"></result>
        <result column="token" property="token"></result>
    </resultMap>


<!--    <select id="idCheck" parameterType="String" resultType="int">-->
<!--        select count(user_id)-->
<!--        from members-->
<!--        where user_id = #{userid}-->
<!--    </select>-->

    <select id="getMemberList" resultMap="member">
        select id, email, name, password, nickname, mbti, introduction, join_date, type_no, salt,photo
        from members
        order by join_date
    </select>

    <insert id="createMember" parameterType="member">
        insert into members (id, email, name, password, phone, nickname, mbti, introduction, join_date, type_no, salt)
        values (#{id}, #{email}, #{name}, #{password}, #{phone}, #{nickname}, #{mbti}, #{introduction}, now(),
        #{type, javaType=com.ssafy.trip.member.model.enums.MemberTypeEnum,
							 typeHandler=com.ssafy.trip.enums.handlers.MemberTypeEnumHandler}, #{salt})
    </insert>

    <select id="getMemberById" parameterType="String" resultMap="memberDetails">
        select id, email, name, password, nickname, mbti, introduction, join_date, type_no, salt, photo, phone
        from members
        where id = #{id}
    </select>

    <select id="getMemberByIdAndPassword" parameterType="memberLoginRequestDto" resultMap="member">
        select id, name, phone, password, nickname, introduction, join_date, email, mbti, type_no, photo, token, salt
        from members
        where id = #{id} and password = #{password}
    </select>

    <select id="getMemberDetailsByIdAndPassword" parameterType="memberLoginRequestDto" resultMap="memberDetails">
        select id, name, phone, nickname, introduction, join_date, email, mbti, type_no, photo, token
        from members
        where id = #{id} and password = #{password}
    </select>

    <select id="getMemberCountById" parameterType="String" resultType="int">
        select count(id)
        from members
        where id = #{id}
    </select>

    <select id="getSaltById" parameterType="String" resultType="String">
        select salt
        from members
        where id = #{id}
    </select>

    <select id="getMemberIdByEmailAndName" parameterType="map" resultType="String">
        select id
        from members
        where email = #{email} and name = #{name}
    </select>

    <select id="getMemberPasswordByIdAndEmailAndPhone" parameterType="map" resultType="String">
        select password
        from members
        where id = #{id} and email = #{email} and phone = #{phone}
    </select>

    <delete id="deleteMember" parameterType="String">
        delete from members
        where id = #{id}
    </delete>

    <update id="updateMember" parameterType="memberDetailsDto">
        update members
        <trim prefix="set" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="mbti != null">mbti = #{mbti},</if>
            <if test="introduction != null">introduction = #{introduction},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="updateMemberPasswordById" parameterType="map" >
        update members
        <trim prefix="set" suffixOverrides=",">
            <if test="password != null">password = #{password},</if>
            <if test="salt != null">salt = #{salt},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="saveRefreshToken" parameterType="map">
        update members
        set token = #{token}
        where id = #{id}
    </update>

    <select id="getRefreshToken" parameterType="string" resultType="string">
        select token
        from members
        where id = #{id}
    </select>

    <update id="deleteRefreshToken" parameterType="map">
        update members
        set token = #{token, jdbcType=VARCHAR}
        where id = #{id}
    </update>

    <!--    <update id="updateMember" parameterType="memberDto">-->
    <!--        update members-->
    <!--        <trim prefix="set" suffixOverrides=",">-->
    <!--            <if test="userPwd != null">user_password = #{userPwd},</if>-->
    <!--            <if test="emailId != null">email_id = #{emailId},</if>-->
    <!--            <if test="emailDomain != null">email_domain = #{emailDomain},</if>-->
    <!--        </trim>-->
    <!--        where user_id = #{userId}-->
    <!--    </update>-->

    <!--    &lt;!&ndash; ADMIN &ndash;&gt;-->
<!--    <select id="listMember" resultMap="memberAll">-->
<!--        select user_name, user_id, user_password, email_id, email_domain, join_date-->
<!--        from members-->
<!--        order by join_date-->
<!--    </select>-->

<!--    <select id="getMember" parameterType="string" resultMap="memberAll">-->
<!--        select user_id, user_name, user_password, email_id, email_domain, join_date-->
<!--        from members-->
<!--        where user_id = #{userId}-->
<!--    </select>-->

<!--    <update id="updateMember" parameterType="memberDto">-->
<!--        update members-->
<!--        <trim prefix="set" suffixOverrides=",">-->
<!--            <if test="userPwd != null">user_password = #{userPwd},</if>-->
<!--            <if test="emailId != null">email_id = #{emailId},</if>-->
<!--            <if test="emailDomain != null">email_domain = #{emailDomain},</if>-->
<!--        </trim>-->
<!--        where user_id = #{userId}-->
<!--    </update>-->

</mapper>