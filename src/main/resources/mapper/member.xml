<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.trip.member.model.mapper.MemberMapper">

<!--    <resultMap type="memberDto" id="member">-->
<!--        <result column="user_id" property="userId"/>-->
<!--        <result column="user_name" property="userName"/>-->
<!--    </resultMap>-->

<!--    &lt;!&ndash; ADMIN &ndash;&gt;-->
<!--    <resultMap type="memberDto" id="memberAll" extends="member">-->
<!--        <result column="user_password" property="userPwd"/>-->
<!--        <result column="email_id" property="emailId"/>-->
<!--        <result column="email_domain" property="emailDomain"/>-->
<!--        <result column="join_date" property="joinDate"/>-->
<!--    </resultMap>-->

<!--    <select id="idCheck" parameterType="String" resultType="int">-->
<!--        select count(user_id)-->
<!--        from members-->
<!--        where user_id = #{userid}-->
<!--    </select>-->

    <insert id="createMember" parameterType="member">
        insert into members (id, email, name, password, phone, nickname, mbti, introduction, join_date, role, salt)
        values (#{id}, #{email}, #{name}, #{password}, #{phone}, #{nickname}, #{mbti}, #{introduction}, now(), #{role}, #{salt})
    </insert>

    <select id="getMemberByIdAndPassword" parameterType="map" resultType="member">
        select id, email, nickname, role
        from members
        where id = #{id} and password = #{password}
    </select>

    <select id="getSaltById" parameterType="String" resultType="String">
        select salt
        from members
        where id = #{id}
    </select>

    <select id="getMemberIdByEmailAndName" parameterType="map" resultType="String">
        select id
        from members
        where email = #{email} and name = #{name}
    </select>

    <select id="getMemberPasswordByIdAndEmailAndPhone" parameterType="map" resultType="String">
        select password
        from members
        where id = #{id} and email = #{email} and phone = #{phone}
    </select>

    <delete id="deleteMember" parameterType="String">
        delete from members
        where id = #{id}
    </delete>

    <update id="updateMember" parameterType="member">
        update members
        <trim prefix="set" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="mbti != null">mbti = #{mbti},</if>
            <if test="introduction != null">introduction = #{introduction},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="updateMemberPasswordById" parameterType="map" >
        update members
        <trim prefix="set" suffixOverrides=",">
            <if test="password != null">password = #{password},</if>
        </trim>
        where id = #{id}
    </update>

    <!--    <update id="updateMember" parameterType="memberDto">-->
    <!--        update members-->
    <!--        <trim prefix="set" suffixOverrides=",">-->
    <!--            <if test="userPwd != null">user_password = #{userPwd},</if>-->
    <!--            <if test="emailId != null">email_id = #{emailId},</if>-->
    <!--            <if test="emailDomain != null">email_domain = #{emailDomain},</if>-->
    <!--        </trim>-->
    <!--        where user_id = #{userId}-->
    <!--    </update>-->

    <!--    &lt;!&ndash; ADMIN &ndash;&gt;-->
<!--    <select id="listMember" resultMap="memberAll">-->
<!--        select user_name, user_id, user_password, email_id, email_domain, join_date-->
<!--        from members-->
<!--        order by join_date-->
<!--    </select>-->

<!--    <select id="getMember" parameterType="string" resultMap="memberAll">-->
<!--        select user_id, user_name, user_password, email_id, email_domain, join_date-->
<!--        from members-->
<!--        where user_id = #{userId}-->
<!--    </select>-->

<!--    <update id="updateMember" parameterType="memberDto">-->
<!--        update members-->
<!--        <trim prefix="set" suffixOverrides=",">-->
<!--            <if test="userPwd != null">user_password = #{userPwd},</if>-->
<!--            <if test="emailId != null">email_id = #{emailId},</if>-->
<!--            <if test="emailDomain != null">email_domain = #{emailDomain},</if>-->
<!--        </trim>-->
<!--        where user_id = #{userId}-->
<!--    </update>-->

</mapper>