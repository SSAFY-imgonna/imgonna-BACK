<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.imgonna.diary.model.mapper.DiaryMapper">
    <resultMap type="attractionResponseDto" id="attractionResponseDto" >
        <result column="content_id" property="contentId"></result>
        <result column="content_type_id" property="contentTypeId"></result>
        <result column="title" property="title"></result>
        <result column="addr1" property="addr1"></result>
        <result column="addr2" property="addr2"></result>
        <result column="zipcode" property="zipcode"></result>
        <result column="tel" property="tel"></result>
        <result column="first_image" property="firstImage"></result>
        <result column="first_image2" property="firstImage2"></result>
        <result column="sido_code" property="sidoCode"></result>
        <result column="gugun_code" property="gugunCode"></result>
        <result column="latitude" property="latitude"></result>
        <result column="longitude" property="longitude"></result>
    </resultMap>	

	<resultMap type="diaryResponseDto" id="diaryResponseDto">
		<result column="diary_no" property="diaryNo"></result>
		<result column="travel_time" property="travelTime"></result>
		<result column="id" property="id"></result>
		<result column="content_id" property="contentId"></result>
		<result column="title" property="title"></result>
		<result column="content" property="content"></result>
		<result column="created_time" property="createdTime"></result>
		<result column="weather" property="weather"></result>
		<result column="emotion" property="emotion"></result>
		<result column="is_public" property="isPublic"></result>
		<result column="latitude" property="latitude"></result>
		<result column="longitude" property="longitude"></result>
		<result column="content_type_id" property="contentTypeId"></result>
		<result column="attraction" property="attraction"></result>
	</resultMap>
		
	<resultMap type="diaryResponseDto" id="diaryResponseFileDto" extends="diaryResponseDto">
		<collection column="diary_no" property="fileInfos" javaType="list"
					ofType="com.ssafy.imgonna.file.model.dto.FileInfoDto" select="fileInfoList"/>
	</resultMap>
	
	<resultMap type="com.ssafy.imgonna.file.model.dto.FileInfoDto" id="file">
		<result column="save_folder" property="saveFolder"/>
		<result column="original_file" property="originalFile"/>
		<result column="save_file" property="saveFile"/>
	</resultMap>

	<select id="fileInfoList" resultMap="file">
		select save_folder, original_file, save_file
		from file_info
		where table_name=2 and pk_no = #{diaryNo}
	</select>
    
    <select id="getAttractionListByTitle" parameterType="String" resultMap="attractionResponseDto">
        select content_id, content_type_id, title, addr1, addr2, zipcode, tel, 
        		first_image, first_image2, sido_code, gugun_code, latitude, longitude
		from attraction_info
		where title like concat('%', #{title}, '%');
    </select>
    
 	<insert id="createDiary" parameterType="diaryRequestDto">
		insert into travel_diary (travel_time, id, content_id, title, content, 
			 weather, emotion, is_public)
		values (#{travelTime}, #{id}, #{contentId}, #{title}, #{content},
			#{weather}, #{emotion}, #{isPublic})
		<selectKey resultType="int" keyProperty="diaryNo" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>    

    <sql id="search">
        <if test="word != null and word != ''">
                and ${key} like concat ('%', #{word}, '%')
        </if>
    </sql>

    <select id="getDiaryList" parameterType="map" resultMap="diaryResponseFileDto">
		select t.*,  content_type_id, a.title attraction, latitude, longitude 
		from travel_diary t join attraction_info a
		where t.content_id = a.content_id
		<include refid="search"></include>
		order by created_time desc
		limit #{start}, #{listsize}
    </select>
    
    <select id="getTotalDiaryCount" parameterType="map" resultType="int">
        select count(diary_no)
        from travel_diary
<!--         <where>
            <include refid="search"></include>
        </where> -->
    </select>
    
    
<!-- 
    <select id="getDiaryByDiaryNo" parameterType="Integer" resultMap="diaryResponseDto">
        select q.qna_no, q.title, q.content, q.created_time, q.modified_time, m.id, m.nickname
        from qna q inner join members m on q.id = m.id
        where qna_no = #{diaryNo}
    </select>


    <update id="modifyDiary" parameterType="diaryRequestDto">
        update qna
        set title=#{title}, content=#{content}, modified_time = now()
        where qna_no = #{diaryNo}
    </update>

    <delete id="deleteDiary" parameterType="int">
        delete from qna
        where qna_no = #{diaryNo}
    </delete>

 -->





    
</mapper>